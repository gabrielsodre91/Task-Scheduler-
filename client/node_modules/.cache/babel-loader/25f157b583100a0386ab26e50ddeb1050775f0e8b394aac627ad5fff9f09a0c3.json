{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3002/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Transformar datas de string para objeto Date\nconst transformDates = task => {\n  return {\n    ...task,\n    scheduledTime: task.scheduledTime ? new Date(task.scheduledTime) : undefined,\n    lastExecutionTime: task.lastExecutionTime ? new Date(task.lastExecutionTime) : undefined,\n    nextExecutionTime: task.nextExecutionTime ? new Date(task.nextExecutionTime) : undefined,\n    createdAt: new Date(task.createdAt),\n    updatedAt: new Date(task.updatedAt)\n  };\n};\nexport const getTasks = async () => {\n  const response = await api.get('/tasks');\n  return response.data.map(transformDates);\n};\nexport const getExecutedTasks = async () => {\n  const response = await api.get('/tasks/executed');\n  return response.data.map(transformDates);\n};\nexport const getTask = async id => {\n  const response = await api.get(`/tasks/${id}`);\n  return transformDates(response.data);\n};\nexport const createTask = async task => {\n  const response = await api.post('/tasks', task);\n  return transformDates(response.data);\n};\nexport const updateTask = async (id, task) => {\n  const response = await api.put(`/tasks/${id}`, task);\n  return transformDates(response.data);\n};\nexport const deleteTask = async id => {\n  await api.delete(`/tasks/${id}`);\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","transformDates","task","scheduledTime","Date","undefined","lastExecutionTime","nextExecutionTime","createdAt","updatedAt","getTasks","response","get","data","map","getExecutedTasks","getTask","id","createTask","post","updateTask","put","deleteTask","delete"],"sources":["/home/fabiolucas/Documentos/tarefaagenda/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Task, TaskFormData } from '../types/Task';\n\nconst API_URL = 'http://localhost:3002/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Transformar datas de string para objeto Date\nconst transformDates = (task: any): Task => {\n  return {\n    ...task,\n    scheduledTime: task.scheduledTime ? new Date(task.scheduledTime) : undefined,\n    lastExecutionTime: task.lastExecutionTime ? new Date(task.lastExecutionTime) : undefined,\n    nextExecutionTime: task.nextExecutionTime ? new Date(task.nextExecutionTime) : undefined,\n    createdAt: new Date(task.createdAt),\n    updatedAt: new Date(task.updatedAt),\n  };\n};\n\nexport const getTasks = async (): Promise<Task[]> => {\n  const response = await api.get('/tasks');\n  return response.data.map(transformDates);\n};\n\nexport const getExecutedTasks = async (): Promise<Task[]> => {\n  const response = await api.get('/tasks/executed');\n  return response.data.map(transformDates);\n};\n\nexport const getTask = async (id: number): Promise<Task> => {\n  const response = await api.get(`/tasks/${id}`);\n  return transformDates(response.data);\n};\n\nexport const createTask = async (task: TaskFormData): Promise<Task> => {\n  const response = await api.post('/tasks', task);\n  return transformDates(response.data);\n};\n\nexport const updateTask = async (id: number, task: Partial<Task>): Promise<Task> => {\n  const response = await api.put(`/tasks/${id}`, task);\n  return transformDates(response.data);\n};\n\nexport const deleteTask = async (id: number): Promise<void> => {\n  await api.delete(`/tasks/${id}`);\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACA,MAAMC,cAAc,GAAIC,IAAS,IAAW;EAC1C,OAAO;IACL,GAAGA,IAAI;IACPC,aAAa,EAAED,IAAI,CAACC,aAAa,GAAG,IAAIC,IAAI,CAACF,IAAI,CAACC,aAAa,CAAC,GAAGE,SAAS;IAC5EC,iBAAiB,EAAEJ,IAAI,CAACI,iBAAiB,GAAG,IAAIF,IAAI,CAACF,IAAI,CAACI,iBAAiB,CAAC,GAAGD,SAAS;IACxFE,iBAAiB,EAAEL,IAAI,CAACK,iBAAiB,GAAG,IAAIH,IAAI,CAACF,IAAI,CAACK,iBAAiB,CAAC,GAAGF,SAAS;IACxFG,SAAS,EAAE,IAAIJ,IAAI,CAACF,IAAI,CAACM,SAAS,CAAC;IACnCC,SAAS,EAAE,IAAIL,IAAI,CAACF,IAAI,CAACO,SAAS;EACpC,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAA6B;EACnD,MAAMC,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,QAAQ,CAAC;EACxC,OAAOD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACb,cAAc,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMc,gBAAgB,GAAG,MAAAA,CAAA,KAA6B;EAC3D,MAAMJ,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,iBAAiB,CAAC;EACjD,OAAOD,QAAQ,CAACE,IAAI,CAACC,GAAG,CAACb,cAAc,CAAC;AAC1C,CAAC;AAED,OAAO,MAAMe,OAAO,GAAG,MAAOC,EAAU,IAAoB;EAC1D,MAAMN,QAAQ,GAAG,MAAMd,GAAG,CAACe,GAAG,CAAC,UAAUK,EAAE,EAAE,CAAC;EAC9C,OAAOhB,cAAc,CAACU,QAAQ,CAACE,IAAI,CAAC;AACtC,CAAC;AAED,OAAO,MAAMK,UAAU,GAAG,MAAOhB,IAAkB,IAAoB;EACrE,MAAMS,QAAQ,GAAG,MAAMd,GAAG,CAACsB,IAAI,CAAC,QAAQ,EAAEjB,IAAI,CAAC;EAC/C,OAAOD,cAAc,CAACU,QAAQ,CAACE,IAAI,CAAC;AACtC,CAAC;AAED,OAAO,MAAMO,UAAU,GAAG,MAAAA,CAAOH,EAAU,EAAEf,IAAmB,KAAoB;EAClF,MAAMS,QAAQ,GAAG,MAAMd,GAAG,CAACwB,GAAG,CAAC,UAAUJ,EAAE,EAAE,EAAEf,IAAI,CAAC;EACpD,OAAOD,cAAc,CAACU,QAAQ,CAACE,IAAI,CAAC;AACtC,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAOL,EAAU,IAAoB;EAC7D,MAAMpB,GAAG,CAAC0B,MAAM,CAAC,UAAUN,EAAE,EAAE,CAAC;AAClC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}