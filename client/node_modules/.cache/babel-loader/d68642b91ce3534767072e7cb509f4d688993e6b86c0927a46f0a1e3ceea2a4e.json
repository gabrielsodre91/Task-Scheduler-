{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:3003/api';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Transformar datas de string para objeto Date\nconst transformDates = task => {\n  return {\n    ...task,\n    scheduledTime: task.scheduledTime ? new Date(task.scheduledTime) : undefined,\n    lastExecutionTime: task.lastExecutionTime ? new Date(task.lastExecutionTime) : undefined,\n    nextExecutionTime: task.nextExecutionTime ? new Date(task.nextExecutionTime) : undefined,\n    createdAt: new Date(task.createdAt),\n    updatedAt: new Date(task.updatedAt)\n  };\n};\nexport const getTasks = async () => {\n  const response = await api.get('/tasks');\n  return response.data.map(transformDates);\n};\nexport const getExecutedTasks = async () => {\n  console.log('Chamando API para buscar tarefas executadas');\n  try {\n    console.log('URL da requisição:', `${API_URL}/tasks/executed`);\n    const response = await api.get('/tasks/executed');\n    console.log('Status da resposta:', response.status);\n    console.log('Headers da resposta:', response.headers);\n    console.log('Resposta da API para tarefas executadas:', response.data);\n    if (!response.data || !Array.isArray(response.data)) {\n      console.error('Resposta não é um array:', response.data);\n      return [];\n    }\n    const transformedTasks = response.data.map(transformDates);\n    console.log('Tarefas executadas transformadas:', transformedTasks);\n    return transformedTasks;\n  } catch (error) {\n    console.error('Erro ao buscar tarefas executadas:', error);\n    return [];\n  }\n};\nexport const getTask = async id => {\n  const response = await api.get(`/tasks/${id}`);\n  return transformDates(response.data);\n};\nexport const createTask = async task => {\n  try {\n    console.log(\"Enviando para API:\", JSON.stringify(task));\n    const response = await api.post('/tasks', task);\n    console.log(\"Resposta recebida:\", response.data);\n    return transformDates(response.data);\n  } catch (error) {\n    console.error(\"Erro na API createTask:\", error);\n    if (axios.isAxiosError(error) && error.response) {\n      console.error(\"Detalhes do erro:\", error.response.data);\n    }\n    throw error;\n  }\n};\nexport const updateTask = async (id, task) => {\n  const response = await api.put(`/tasks/${id}`, task);\n  return transformDates(response.data);\n};\nexport const deleteTask = async id => {\n  await api.delete(`/tasks/${id}`);\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","transformDates","task","scheduledTime","Date","undefined","lastExecutionTime","nextExecutionTime","createdAt","updatedAt","getTasks","response","get","data","map","getExecutedTasks","console","log","status","Array","isArray","error","transformedTasks","getTask","id","createTask","JSON","stringify","post","isAxiosError","updateTask","put","deleteTask","delete"],"sources":["/home/fabiolucas/Documentos/tarefaagenda/client/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\nimport { Task, TaskFormData } from '../types/Task';\n\nconst API_URL = 'http://localhost:3003/api';\n\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Transformar datas de string para objeto Date\nconst transformDates = (task: any): Task => {\n  return {\n    ...task,\n    scheduledTime: task.scheduledTime ? new Date(task.scheduledTime) : undefined,\n    lastExecutionTime: task.lastExecutionTime ? new Date(task.lastExecutionTime) : undefined,\n    nextExecutionTime: task.nextExecutionTime ? new Date(task.nextExecutionTime) : undefined,\n    createdAt: new Date(task.createdAt),\n    updatedAt: new Date(task.updatedAt),\n  };\n};\n\nexport const getTasks = async (): Promise<Task[]> => {\n  const response = await api.get('/tasks');\n  return response.data.map(transformDates);\n};\n\nexport const getExecutedTasks = async (): Promise<Task[]> => {\n  console.log('Chamando API para buscar tarefas executadas');\n  try {\n    console.log('URL da requisição:', `${API_URL}/tasks/executed`);\n    const response = await api.get('/tasks/executed');\n    console.log('Status da resposta:', response.status);\n    console.log('Headers da resposta:', response.headers);\n    console.log('Resposta da API para tarefas executadas:', response.data);\n    \n    if (!response.data || !Array.isArray(response.data)) {\n      console.error('Resposta não é um array:', response.data);\n      return [];\n    }\n    \n    const transformedTasks = response.data.map(transformDates);\n    console.log('Tarefas executadas transformadas:', transformedTasks);\n    return transformedTasks;\n  } catch (error) {\n    console.error('Erro ao buscar tarefas executadas:', error);\n    return [];\n  }\n};\n\nexport const getTask = async (id: number): Promise<Task> => {\n  const response = await api.get(`/tasks/${id}`);\n  return transformDates(response.data);\n};\n\nexport const createTask = async (task: TaskFormData): Promise<Task> => {\n  try {\n    console.log(\"Enviando para API:\", JSON.stringify(task));\n    const response = await api.post('/tasks', task);\n    console.log(\"Resposta recebida:\", response.data);\n    return transformDates(response.data);\n  } catch (error) {\n    console.error(\"Erro na API createTask:\", error);\n    if (axios.isAxiosError(error) && error.response) {\n      console.error(\"Detalhes do erro:\", error.response.data);\n    }\n    throw error;\n  }\n};\n\nexport const updateTask = async (id: number, task: Partial<Task>): Promise<Task> => {\n  const response = await api.put(`/tasks/${id}`, task);\n  return transformDates(response.data);\n};\n\nexport const deleteTask = async (id: number): Promise<void> => {\n  await api.delete(`/tasks/${id}`);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}